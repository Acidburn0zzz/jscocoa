	
/*
	function	objc_encoding()
	{
		var encodings = { 	 'void' : 'v'
							,'id' : '@'
							}
		var encoding = encodings[arguments[0]]
		encoding += '@:'
		
		for (var i=1; i<arguments.length; i++)	encoding += encodings[arguments[i]]
		return	encoding
	}
	
	// Define a new class
	var newClass = JSCocoaController.sharedController().createClass_parentClass("PerformSelectorTester", "NSObject")
//	JSCocoaController.log('encoding=' + objc_encoding('void', 'id'))
	var added = JSCocoaController.sharedController().addInstanceMethod_class_jsFunction_encoding('callMe:', objc_getClass("PerformSelectorTester"), performSelectorTarget, objc_encoding('void', 'id'))

	var pfo = PerformSelectorTester.alloc().init()
	
//	pfo.performSelector_withObject_afterDelay('callMe:', null, 0)
	

//	SomeKindOfObject.newObject
//	SomeKindOfObject.alloc.init
	
	
		pfo.performSelector_withObject_afterDelay('callMe:', null, 0.1)


var o = null

	function	performSelectorTarget(notif)
	{
		
		JSCocoaController.log('Called someKindOfObjectAllocCount=' + ApplicationController.someKindOfObjectAllocCount)
		pfo.performSelector_withObject_afterDelay('callMe:', null, 0.1)
		
//	SomeKindOfObject.newObject
	var o = SomeKindOfObject.alloc.init.release
//		o = null
		JSCocoaController.garbageCollect
	}
*/


//	SomeKindOfObject